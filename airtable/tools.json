[
    {
      name: "list_records",
      description: "List records from a table",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          view: {
            type: "string",
            description: "View name or ID to use for filtering and sorting records. If provided, the view's filters and sorts will be applied.",
          },
          maxRecords: {
            type: "number",
            description: "Maximum number of records to return. Defaults to 100.",
          },
          filterByFormula: {
            type: "string",
            description: "Airtable formula to filter records",
          },
          sort: {
            type: "array",
            items: {
              type: "object",
              properties: {
                field: {
                  type: "string",
                  description: "Field name to sort by",
                },
                direction: {
                  type: "string",
                  enum: [
                    "asc",
                    "desc",
                  ],
                  description: "Sort direction. Defaults to asc (ascending)",
                },
              },
              required: [
                "field",
              ],
              additionalProperties: false,
            },
            description: "Specifies how to sort the records",
          },
        },
        required: [
          "baseId",
          "tableId",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "search_records",
      description: "Search for records containing specific text",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          view: {
            type: "string",
            description: "View name or ID to use for filtering and sorting records. If provided, the view's filters and sorts will be applied.",
          },
          searchTerm: {
            type: "string",
            description: "Text to search for in records",
          },
          fieldIds: {
            type: "array",
            items: {
              type: "string",
            },
            description: "Specific field ids to search in. If not provided, searches all text-based fields.",
          },
          maxRecords: {
            type: "number",
            description: "Maximum number of records to return. Defaults to 100.",
          },
        },
        required: [
          "baseId",
          "tableId",
          "searchTerm",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "list_bases",
      description: "List all accessible Airtable bases",
      inputSchema: {
        type: "object",
        properties: {
        },
        required: [
        ],
      },
    },
    {
      name: "list_tables",
      description: "List all tables in a specific base",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          detailLevel: {
            type: "string",
            enum: [
              "tableIdentifiersOnly",
              "identifiersOnly",
              "full",
            ],
            description: "Detail level for table information:\n- tableIdentifiersOnly: table IDs and names\n- identifiersOnly: table, field, and view IDs and names\n- full: complete details including field types, descriptions, and configurations\n\nNote for LLMs: To optimize context window usage, request the minimum detail level needed:\n- Use 'tableIdentifiersOnly' when you only need to list or reference tables\n- Use 'identifiersOnly' when you need to work with field or view references\n- Only use 'full' when you need field types, descriptions, or other detailed configuration\n\nIf you only need detailed information on a few tables in a base with many complex tables, it might be more efficient for you to use list_tables with tableIdentifiersOnly, then describe_table with full on the specific tables you want.",
            default: "full",
          },
        },
        required: [
          "baseId",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "describe_table",
      description: "Get detailed information about a specific table",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          detailLevel: {
            type: "string",
            enum: [
              "tableIdentifiersOnly",
              "identifiersOnly",
              "full",
            ],
            description: "Detail level for table information:\n- tableIdentifiersOnly: table IDs and names\n- identifiersOnly: table, field, and view IDs and names\n- full: complete details including field types, descriptions, and configurations\n\nNote for LLMs: To optimize context window usage, request the minimum detail level needed:\n- Use 'tableIdentifiersOnly' when you only need to list or reference tables\n- Use 'identifiersOnly' when you need to work with field or view references\n- Only use 'full' when you need field types, descriptions, or other detailed configuration\n\nIf you only need detailed information on a few tables in a base with many complex tables, it might be more efficient for you to use list_tables with tableIdentifiersOnly, then describe_table with full on the specific tables you want.",
            default: "full",
          },
        },
        required: [
          "baseId",
          "tableId",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "get_record",
      description: "Get a specific record by ID",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          recordId: {
            type: "string",
          },
        },
        required: [
          "baseId",
          "tableId",
          "recordId",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "create_record",
      description: "Create a new record in a table",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          fields: {
            type: "object",
            additionalProperties: {
            },
          },
        },
        required: [
          "baseId",
          "tableId",
          "fields",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "update_records",
      description: "Update up to 10 records in a table",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          records: {
            type: "array",
            items: {
              type: "object",
              properties: {
                id: {
                  type: "string",
                },
                fields: {
                  type: "object",
                  additionalProperties: {
                  },
                },
              },
              required: [
                "id",
                "fields",
              ],
              additionalProperties: false,
            },
          },
        },
        required: [
          "baseId",
          "tableId",
          "records",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "delete_records",
      description: "Delete records from a table",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          recordIds: {
            type: "array",
            items: {
              type: "string",
            },
          },
        },
        required: [
          "baseId",
          "tableId",
          "recordIds",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "create_table",
      description: "Create a new table in a base",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          name: {
            type: "string",
            description: "Name for the new table. Must be unique in the base.",
          },
          description: {
            type: "string",
          },
          fields: {
            type: "array",
            items: {
              allOf: [
                {
                  type: "object",
                  properties: {
                    name: {
                      type: "string",
                    },
                    description: {
                      type: "string",
                    },
                  },
                  required: [
                    "name",
                  ],
                },
                {
                  anyOf: [
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "autoNumber",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "barcode",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "button",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            color: {
                              type: "string",
                              enum: [
                                "greenBright",
                                "tealBright",
                                "cyanBright",
                                "blueBright",
                                "purpleBright",
                                "pinkBright",
                                "redBright",
                                "orangeBright",
                                "yellowBright",
                                "grayBright",
                              ],
                              description: "The color of the checkbox.",
                            },
                            icon: {
                              type: "string",
                              enum: [
                                "check",
                                "xCheckbox",
                                "star",
                                "heart",
                                "thumbsUp",
                                "flag",
                                "dot",
                              ],
                              description: "The icon name of the checkbox.",
                            },
                          },
                          required: [
                            "color",
                            "icon",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "checkbox",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                      description: "Bases on a free or plus plan are limited to using the `'check'` icon and `'greenBright'` color.",
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "createdBy",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            result: {
                              anyOf: [
                                {
                                  type: "object",
                                  properties: {
                                    options: {
                                      type: "object",
                                      properties: {
                                        dateFormat: {
                                          type: "object",
                                          properties: {
                                            format: {
                                              type: "string",
                                              enum: [
                                                "l",
                                                "LL",
                                                "M/D/YYYY",
                                                "D/M/YYYY",
                                                "YYYY-MM-DD",
                                              ],
                                              description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                            },
                                            name: {
                                              type: "string",
                                              enum: [
                                                "local",
                                                "friendly",
                                                "us",
                                                "european",
                                                "iso",
                                              ],
                                            },
                                          },
                                          required: [
                                            "format",
                                            "name",
                                          ],
                                          additionalProperties: false,
                                        },
                                      },
                                      required: [
                                        "dateFormat",
                                      ],
                                      additionalProperties: false,
                                    },
                                    type: {
                                      type: "string",
                                      const: "date",
                                    },
                                  },
                                  required: [
                                    "options",
                                    "type",
                                  ],
                                  additionalProperties: false,
                                },
                                {
                                  type: "object",
                                  properties: {
                                    options: {
                                      type: "object",
                                      properties: {
                                        dateFormat: {
                                          type: "object",
                                          properties: {
                                            format: {
                                              type: "string",
                                              enum: [
                                                "l",
                                                "LL",
                                                "M/D/YYYY",
                                                "D/M/YYYY",
                                                "YYYY-MM-DD",
                                              ],
                                              description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                            },
                                            name: {
                                              type: "string",
                                              enum: [
                                                "local",
                                                "friendly",
                                                "us",
                                                "european",
                                                "iso",
                                              ],
                                            },
                                          },
                                          required: [
                                            "format",
                                            "name",
                                          ],
                                          additionalProperties: false,
                                        },
                                        timeFormat: {
                                          type: "object",
                                          properties: {
                                            format: {
                                              type: "string",
                                              enum: [
                                                "h:mma",
                                                "HH:mm",
                                              ],
                                            },
                                            name: {
                                              type: "string",
                                              enum: [
                                                "12hour",
                                                "24hour",
                                              ],
                                            },
                                          },
                                          required: [
                                            "format",
                                            "name",
                                          ],
                                          additionalProperties: false,
                                        },
                                        timeZone: {
                                        },
                                      },
                                      required: [
                                        "dateFormat",
                                        "timeFormat",
                                      ],
                                      additionalProperties: false,
                                    },
                                    type: {
                                      type: "string",
                                      const: "dateTime",
                                    },
                                  },
                                  required: [
                                    "options",
                                    "type",
                                  ],
                                  additionalProperties: false,
                                },
                              ],
                              description: "This will always be a `date` or `dateTime` field config.",
                            },
                          },
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "createdTime",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            isValid: {
                              type: "boolean",
                              description: "`false` when recordLinkFieldId is null, e.g. the referenced column was deleted.",
                            },
                            recordLinkFieldId: {
                              type: [
                                "string",
                                "null",
                              ],
                            },
                          },
                          required: [
                            "isValid",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "count",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            isValid: {
                              type: "boolean",
                              description: "False if this formula/field configuation has an error",
                            },
                            referencedFieldIds: {
                              anyOf: [
                                {
                                  type: "array",
                                  items: {
                                    type: "string",
                                  },
                                },
                                {
                                  type: "null",
                                },
                              ],
                              description: "The fields to check the last modified time of",
                            },
                            result: {
                              anyOf: [
                                {
                                  type: "object",
                                  properties: {
                                    options: {
                                      type: "object",
                                      properties: {
                                        dateFormat: {
                                          type: "object",
                                          properties: {
                                            format: {
                                              type: "string",
                                              enum: [
                                                "l",
                                                "LL",
                                                "M/D/YYYY",
                                                "D/M/YYYY",
                                                "YYYY-MM-DD",
                                              ],
                                              description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                            },
                                            name: {
                                              type: "string",
                                              enum: [
                                                "local",
                                                "friendly",
                                                "us",
                                                "european",
                                                "iso",
                                              ],
                                            },
                                          },
                                          required: [
                                            "format",
                                            "name",
                                          ],
                                          additionalProperties: false,
                                        },
                                      },
                                      required: [
                                        "dateFormat",
                                      ],
                                      additionalProperties: false,
                                    },
                                    type: {
                                      type: "string",
                                      const: "date",
                                    },
                                  },
                                  required: [
                                    "options",
                                    "type",
                                  ],
                                  additionalProperties: false,
                                },
                                {
                                  type: "object",
                                  properties: {
                                    options: {
                                      type: "object",
                                      properties: {
                                        dateFormat: {
                                          type: "object",
                                          properties: {
                                            format: {
                                              type: "string",
                                              enum: [
                                                "l",
                                                "LL",
                                                "M/D/YYYY",
                                                "D/M/YYYY",
                                                "YYYY-MM-DD",
                                              ],
                                              description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                            },
                                            name: {
                                              type: "string",
                                              enum: [
                                                "local",
                                                "friendly",
                                                "us",
                                                "european",
                                                "iso",
                                              ],
                                            },
                                          },
                                          required: [
                                            "format",
                                            "name",
                                          ],
                                          additionalProperties: false,
                                        },
                                        timeFormat: {
                                          type: "object",
                                          properties: {
                                            format: {
                                              type: "string",
                                              enum: [
                                                "h:mma",
                                                "HH:mm",
                                              ],
                                            },
                                            name: {
                                              type: "string",
                                              enum: [
                                                "12hour",
                                                "24hour",
                                              ],
                                            },
                                          },
                                          required: [
                                            "format",
                                            "name",
                                          ],
                                          additionalProperties: false,
                                        },
                                        timeZone: {
                                        },
                                      },
                                      required: [
                                        "dateFormat",
                                        "timeFormat",
                                      ],
                                      additionalProperties: false,
                                    },
                                    type: {
                                      type: "string",
                                      const: "dateTime",
                                    },
                                  },
                                  required: [
                                    "options",
                                    "type",
                                  ],
                                  additionalProperties: false,
                                },
                                {
                                  type: "null",
                                },
                              ],
                              description: "This will always be a `date` or `dateTime` field config.",
                            },
                          },
                          required: [
                            "isValid",
                            "referencedFieldIds",
                            "result",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "lastModifiedTime",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "lastModifiedBy",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            fieldIdInLinkedTable: {
                              type: [
                                "string",
                                "null",
                              ],
                              description: "The field in the linked table that this field is looking up.",
                            },
                            isValid: {
                              type: "boolean",
                              description: "Is the field currently valid (e.g. false if the linked record field has\nbeen deleted)",
                            },
                            recordLinkFieldId: {
                              type: [
                                "string",
                                "null",
                              ],
                              description: "The linked record field in the current table.",
                            },
                            result: {
                              anyOf: [
                                {
                                },
                                {
                                  type: "null",
                                },
                              ],
                              description: "The field type and options inside of the linked table. See other field\ntype configs on this page for the possible values. Can be null if invalid.",
                            },
                          },
                          required: [
                            "fieldIdInLinkedTable",
                            "isValid",
                            "recordLinkFieldId",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "lookup",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            precision: {
                              type: "number",
                              description: "Indicates the number of digits shown to the right of the decimal point for this field. (0-8 inclusive)",
                            },
                          },
                          required: [
                            "precision",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "number",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            precision: {
                              type: "number",
                              description: "Indicates the number of digits shown to the right of the decimal point for this field. (0-8 inclusive)",
                            },
                          },
                          required: [
                            "precision",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "percent",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            precision: {
                              type: "number",
                              description: "Indicates the number of digits shown to the right of the decimal point for this field. (0-7 inclusive)",
                            },
                            symbol: {
                              type: "string",
                              description: "Currency symbol to use.",
                            },
                          },
                          required: [
                            "precision",
                            "symbol",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "currency",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            durationFormat: {
                              type: "string",
                              enum: [
                                "h:mm",
                                "h:mm:ss",
                                "h:mm:ss.S",
                                "h:mm:ss.SS",
                                "h:mm:ss.SSS",
                              ],
                            },
                          },
                          required: [
                            "durationFormat",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "duration",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "multilineText",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "phoneNumber",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            color: {
                              type: "string",
                              enum: [
                                "yellowBright",
                                "orangeBright",
                                "redBright",
                                "pinkBright",
                                "purpleBright",
                                "blueBright",
                                "cyanBright",
                                "tealBright",
                                "greenBright",
                                "grayBright",
                              ],
                              description: "The color of selected icons.",
                            },
                            icon: {
                              type: "string",
                              enum: [
                                "star",
                                "heart",
                                "thumbsUp",
                                "flag",
                                "dot",
                              ],
                              description: "The icon name used to display the rating.",
                            },
                            max: {
                              type: "number",
                              description: "The maximum value for the rating, from 1 to 10 inclusive.",
                            },
                          },
                          required: [
                            "color",
                            "icon",
                            "max",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "rating",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                      description: "Bases on a free or plus plan are limited to using the 'star' icon and 'yellowBright' color.",
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "richText",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            fieldIdInLinkedTable: {
                              type: "string",
                              description: "The id of the field in the linked table",
                            },
                            isValid: {
                              type: "boolean",
                            },
                            recordLinkFieldId: {
                              type: "string",
                              description: "The linked field id",
                            },
                            referencedFieldIds: {
                              type: "array",
                              items: {
                                type: "string",
                              },
                              description: "The ids of any fields referenced in the rollup formula",
                            },
                            result: {
                              anyOf: [
                                {
                                },
                                {
                                  type: "null",
                                },
                              ],
                              description: "The resulting field type and options for the rollup. See other field\ntype configs on this page for the possible values. Can be null if invalid.",
                            },
                          },
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "rollup",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "singleLineText",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "email",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          const: "url",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            choices: {
                              type: "array",
                              items: {
                                type: "object",
                                properties: {
                                  color: {
                                    type: "string",
                                    description: "Optional when the select field is configured to not use colors.\n\nAllowed values: \"blueLight2\", \"cyanLight2\", \"tealLight2\", \"greenLight2\", \"yellowLight2\", \"orangeLight2\", \"redLight2\", \"pinkLight2\", \"purpleLight2\", \"grayLight2\", \"blueLight1\", \"cyanLight1\", \"tealLight1\", \"greenLight1\", \"yellowLight1\", \"orangeLight1\", \"redLight1\", \"pinkLight1\", \"purpleLight1\", \"grayLight1\", \"blueBright\", \"cyanBright\", \"tealBright\", \"greenBright\", \"yellowBright\", \"orangeBright\", \"redBright\", \"pinkBright\", \"purpleBright\", \"grayBright\", \"blueDark1\", \"cyanDark1\", \"tealDark1\", \"greenDark1\", \"yellowDark1\", \"orangeDark1\", \"redDark1\", \"pinkDark1\", \"purpleDark1\", \"grayDark1\"",
                                  },
                                  id: {
                                    type: "string",
                                  },
                                  name: {
                                    type: "string",
                                  },
                                },
                                required: [
                                  "id",
                                  "name",
                                ],
                                additionalProperties: false,
                              },
                            },
                          },
                          required: [
                            "choices",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "externalSyncSource",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            prompt: {
                              type: "array",
                              items: {
                                anyOf: [
                                  {
                                    type: "string",
                                  },
                                  {
                                    type: "object",
                                    properties: {
                                      field: {
                                        type: "object",
                                        properties: {
                                          fieldId: {
                                            type: "string",
                                          },
                                        },
                                        required: [
                                          "fieldId",
                                        ],
                                        additionalProperties: false,
                                      },
                                    },
                                    required: [
                                      "field",
                                    ],
                                    additionalProperties: false,
                                  },
                                ],
                              },
                              description: "The prompt that is used to generate the results in the AI field, additional object\ntypes may be added in the future. Currently, this is an array of strings or objects that identify any fields interpolated into the prompt.\n\nThe prompt will not currently be provided if this field config is within another\nfields configuration (like a lookup field)",
                            },
                            referencedFieldIds: {
                              type: "array",
                              items: {
                                type: "string",
                              },
                              description: "The other fields in the record that are used in the ai field\n\nThe referencedFieldIds will not currently be provided if this field config is within another\nfields configuration (like a lookup field)",
                            },
                          },
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "aiText",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            linkedTableId: {
                              type: "string",
                              description: "The ID of the table this field links to",
                            },
                            viewIdForRecordSelection: {
                              type: "string",
                              description: "The ID of the view in the linked table\nto use when showing a list of records to select from",
                            },
                          },
                          required: [
                            "linkedTableId",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "multipleRecordLinks",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                      description: "Creating \"multipleRecordLinks\" fields is supported but updating options for\nexisting \"multipleRecordLinks\" fields is not supported.",
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            choices: {
                              type: "array",
                              items: {
                                type: "object",
                                properties: {
                                  color: {
                                    type: "string",
                                    description: "Optional when creating an option.",
                                  },
                                  id: {
                                    type: "string",
                                    description: "This is not specified when creating new options, useful when specifing existing\noptions (for example: reordering options, keeping old options and adding new ones, etc)",
                                  },
                                  name: {
                                    type: "string",
                                  },
                                },
                                required: [
                                  "name",
                                ],
                                additionalProperties: false,
                              },
                            },
                          },
                          required: [
                            "choices",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "singleSelect",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            choices: {
                              type: "array",
                              items: {
                                type: "object",
                                properties: {
                                  color: {
                                    type: "string",
                                    description: "Optional when creating an option.",
                                  },
                                  id: {
                                    type: "string",
                                    description: "This is not specified when creating new options, useful when specifing existing\noptions (for example: reordering options, keeping old options and adding new ones, etc)",
                                  },
                                  name: {
                                    type: "string",
                                  },
                                },
                                required: [
                                  "name",
                                ],
                                additionalProperties: false,
                              },
                            },
                          },
                          required: [
                            "choices",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "multipleSelects",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          additionalProperties: {
                          },
                        },
                        type: {
                          type: "string",
                          const: "singleCollaborator",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          additionalProperties: {
                          },
                        },
                        type: {
                          type: "string",
                          const: "multipleCollaborators",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            dateFormat: {
                              type: "object",
                              properties: {
                                format: {
                                  type: "string",
                                  enum: [
                                    "l",
                                    "LL",
                                    "M/D/YYYY",
                                    "D/M/YYYY",
                                    "YYYY-MM-DD",
                                  ],
                                  description: "Format is optional when writing, but it must match\nthe corresponding name if provided.\n\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                },
                                name: {
                                  type: "string",
                                  enum: [
                                    "local",
                                    "friendly",
                                    "us",
                                    "european",
                                    "iso",
                                  ],
                                },
                              },
                              required: [
                                "name",
                              ],
                              additionalProperties: false,
                            },
                          },
                          required: [
                            "dateFormat",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "date",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            dateFormat: {
                              type: "object",
                              properties: {
                                format: {
                                  type: "string",
                                  enum: [
                                    "l",
                                    "LL",
                                    "M/D/YYYY",
                                    "D/M/YYYY",
                                    "YYYY-MM-DD",
                                  ],
                                  description: "Format is optional when writing, but it must match\nthe corresponding name if provided.\n\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                },
                                name: {
                                  type: "string",
                                  enum: [
                                    "local",
                                    "friendly",
                                    "us",
                                    "european",
                                    "iso",
                                  ],
                                },
                              },
                              required: [
                                "name",
                              ],
                              additionalProperties: false,
                            },
                            timeFormat: {
                              type: "object",
                              properties: {
                                format: {
                                  type: "string",
                                  enum: [
                                    "h:mma",
                                    "HH:mm",
                                  ],
                                },
                                name: {
                                  type: "string",
                                  enum: [
                                    "12hour",
                                    "24hour",
                                  ],
                                },
                              },
                              required: [
                                "name",
                              ],
                              additionalProperties: false,
                            },
                            timeZone: {
                            },
                          },
                          required: [
                            "dateFormat",
                            "timeFormat",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "dateTime",
                        },
                      },
                      required: [
                        "options",
                        "type",
                      ],
                      additionalProperties: false,
                    },
                    {
                      type: "object",
                      properties: {
                        options: {
                          type: "object",
                          properties: {
                            isReversed: {
                              type: "boolean",
                            },
                          },
                          required: [
                            "isReversed",
                          ],
                          additionalProperties: false,
                        },
                        type: {
                          type: "string",
                          const: "multipleAttachments",
                        },
                      },
                      required: [
                        "type",
                      ],
                      additionalProperties: false,
                    },
                  ],
                },
              ],
              description: "The config of a field. NB: Formula fields cannot be created with this MCP due to a limitation in the Airtable API.",
            },
            description: "Table fields. Rules:\n- At least one field must be specified.\n- The primary (first) field must be one of: single line text, long text, date, phone number, email, URL, number, currency, percent, duration, formula, autonumber, barcode.",
          },
        },
        required: [
          "baseId",
          "name",
          "fields",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "update_table",
      description: "Update a table's name or description",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          name: {
            type: "string",
          },
          description: {
            type: "string",
          },
        },
        required: [
          "baseId",
          "tableId",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "create_field",
      description: "Create a new field in a table",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          nested: {
            type: "object",
            properties: {
              field: {
                allOf: [
                  {
                    type: "object",
                    properties: {
                      name: {
                        type: "string",
                      },
                      description: {
                        type: "string",
                      },
                    },
                    required: [
                      "name",
                    ],
                  },
                  {
                    anyOf: [
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "autoNumber",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "barcode",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "button",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              color: {
                                type: "string",
                                enum: [
                                  "greenBright",
                                  "tealBright",
                                  "cyanBright",
                                  "blueBright",
                                  "purpleBright",
                                  "pinkBright",
                                  "redBright",
                                  "orangeBright",
                                  "yellowBright",
                                  "grayBright",
                                ],
                                description: "The color of the checkbox.",
                              },
                              icon: {
                                type: "string",
                                enum: [
                                  "check",
                                  "xCheckbox",
                                  "star",
                                  "heart",
                                  "thumbsUp",
                                  "flag",
                                  "dot",
                                ],
                                description: "The icon name of the checkbox.",
                              },
                            },
                            required: [
                              "color",
                              "icon",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "checkbox",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                        description: "Bases on a free or plus plan are limited to using the `'check'` icon and `'greenBright'` color.",
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "createdBy",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              result: {
                                anyOf: [
                                  {
                                    type: "object",
                                    properties: {
                                      options: {
                                        type: "object",
                                        properties: {
                                          dateFormat: {
                                            type: "object",
                                            properties: {
                                              format: {
                                                type: "string",
                                                enum: [
                                                  "l",
                                                  "LL",
                                                  "M/D/YYYY",
                                                  "D/M/YYYY",
                                                  "YYYY-MM-DD",
                                                ],
                                                description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                              },
                                              name: {
                                                type: "string",
                                                enum: [
                                                  "local",
                                                  "friendly",
                                                  "us",
                                                  "european",
                                                  "iso",
                                                ],
                                              },
                                            },
                                            required: [
                                              "format",
                                              "name",
                                            ],
                                            additionalProperties: false,
                                          },
                                        },
                                        required: [
                                          "dateFormat",
                                        ],
                                        additionalProperties: false,
                                      },
                                      type: {
                                        type: "string",
                                        const: "date",
                                      },
                                    },
                                    required: [
                                      "options",
                                      "type",
                                    ],
                                    additionalProperties: false,
                                  },
                                  {
                                    type: "object",
                                    properties: {
                                      options: {
                                        type: "object",
                                        properties: {
                                          dateFormat: {
                                            type: "object",
                                            properties: {
                                              format: {
                                                type: "string",
                                                enum: [
                                                  "l",
                                                  "LL",
                                                  "M/D/YYYY",
                                                  "D/M/YYYY",
                                                  "YYYY-MM-DD",
                                                ],
                                                description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                              },
                                              name: {
                                                type: "string",
                                                enum: [
                                                  "local",
                                                  "friendly",
                                                  "us",
                                                  "european",
                                                  "iso",
                                                ],
                                              },
                                            },
                                            required: [
                                              "format",
                                              "name",
                                            ],
                                            additionalProperties: false,
                                          },
                                          timeFormat: {
                                            type: "object",
                                            properties: {
                                              format: {
                                                type: "string",
                                                enum: [
                                                  "h:mma",
                                                  "HH:mm",
                                                ],
                                              },
                                              name: {
                                                type: "string",
                                                enum: [
                                                  "12hour",
                                                  "24hour",
                                                ],
                                              },
                                            },
                                            required: [
                                              "format",
                                              "name",
                                            ],
                                            additionalProperties: false,
                                          },
                                          timeZone: {
                                          },
                                        },
                                        required: [
                                          "dateFormat",
                                          "timeFormat",
                                        ],
                                        additionalProperties: false,
                                      },
                                      type: {
                                        type: "string",
                                        const: "dateTime",
                                      },
                                    },
                                    required: [
                                      "options",
                                      "type",
                                    ],
                                    additionalProperties: false,
                                  },
                                ],
                                description: "This will always be a `date` or `dateTime` field config.",
                              },
                            },
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "createdTime",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              isValid: {
                                type: "boolean",
                                description: "`false` when recordLinkFieldId is null, e.g. the referenced column was deleted.",
                              },
                              recordLinkFieldId: {
                                type: [
                                  "string",
                                  "null",
                                ],
                              },
                            },
                            required: [
                              "isValid",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "count",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              isValid: {
                                type: "boolean",
                                description: "False if this formula/field configuation has an error",
                              },
                              referencedFieldIds: {
                                anyOf: [
                                  {
                                    type: "array",
                                    items: {
                                      type: "string",
                                    },
                                  },
                                  {
                                    type: "null",
                                  },
                                ],
                                description: "The fields to check the last modified time of",
                              },
                              result: {
                                anyOf: [
                                  {
                                    type: "object",
                                    properties: {
                                      options: {
                                        type: "object",
                                        properties: {
                                          dateFormat: {
                                            type: "object",
                                            properties: {
                                              format: {
                                                type: "string",
                                                enum: [
                                                  "l",
                                                  "LL",
                                                  "M/D/YYYY",
                                                  "D/M/YYYY",
                                                  "YYYY-MM-DD",
                                                ],
                                                description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                              },
                                              name: {
                                                type: "string",
                                                enum: [
                                                  "local",
                                                  "friendly",
                                                  "us",
                                                  "european",
                                                  "iso",
                                                ],
                                              },
                                            },
                                            required: [
                                              "format",
                                              "name",
                                            ],
                                            additionalProperties: false,
                                          },
                                        },
                                        required: [
                                          "dateFormat",
                                        ],
                                        additionalProperties: false,
                                      },
                                      type: {
                                        type: "string",
                                        const: "date",
                                      },
                                    },
                                    required: [
                                      "options",
                                      "type",
                                    ],
                                    additionalProperties: false,
                                  },
                                  {
                                    type: "object",
                                    properties: {
                                      options: {
                                        type: "object",
                                        properties: {
                                          dateFormat: {
                                            type: "object",
                                            properties: {
                                              format: {
                                                type: "string",
                                                enum: [
                                                  "l",
                                                  "LL",
                                                  "M/D/YYYY",
                                                  "D/M/YYYY",
                                                  "YYYY-MM-DD",
                                                ],
                                                description: "`format` is always provided when reading.\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                              },
                                              name: {
                                                type: "string",
                                                enum: [
                                                  "local",
                                                  "friendly",
                                                  "us",
                                                  "european",
                                                  "iso",
                                                ],
                                              },
                                            },
                                            required: [
                                              "format",
                                              "name",
                                            ],
                                            additionalProperties: false,
                                          },
                                          timeFormat: {
                                            type: "object",
                                            properties: {
                                              format: {
                                                type: "string",
                                                enum: [
                                                  "h:mma",
                                                  "HH:mm",
                                                ],
                                              },
                                              name: {
                                                type: "string",
                                                enum: [
                                                  "12hour",
                                                  "24hour",
                                                ],
                                              },
                                            },
                                            required: [
                                              "format",
                                              "name",
                                            ],
                                            additionalProperties: false,
                                          },
                                          timeZone: {
                                          },
                                        },
                                        required: [
                                          "dateFormat",
                                          "timeFormat",
                                        ],
                                        additionalProperties: false,
                                      },
                                      type: {
                                        type: "string",
                                        const: "dateTime",
                                      },
                                    },
                                    required: [
                                      "options",
                                      "type",
                                    ],
                                    additionalProperties: false,
                                  },
                                  {
                                    type: "null",
                                  },
                                ],
                                description: "This will always be a `date` or `dateTime` field config.",
                              },
                            },
                            required: [
                              "isValid",
                              "referencedFieldIds",
                              "result",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "lastModifiedTime",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "lastModifiedBy",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              fieldIdInLinkedTable: {
                                type: [
                                  "string",
                                  "null",
                                ],
                                description: "The field in the linked table that this field is looking up.",
                              },
                              isValid: {
                                type: "boolean",
                                description: "Is the field currently valid (e.g. false if the linked record field has\nbeen deleted)",
                              },
                              recordLinkFieldId: {
                                type: [
                                  "string",
                                  "null",
                                ],
                                description: "The linked record field in the current table.",
                              },
                              result: {
                                anyOf: [
                                  {
                                  },
                                  {
                                    type: "null",
                                  },
                                ],
                                description: "The field type and options inside of the linked table. See other field\ntype configs on this page for the possible values. Can be null if invalid.",
                              },
                            },
                            required: [
                              "fieldIdInLinkedTable",
                              "isValid",
                              "recordLinkFieldId",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "lookup",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              precision: {
                                type: "number",
                                description: "Indicates the number of digits shown to the right of the decimal point for this field. (0-8 inclusive)",
                              },
                            },
                            required: [
                              "precision",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "number",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              precision: {
                                type: "number",
                                description: "Indicates the number of digits shown to the right of the decimal point for this field. (0-8 inclusive)",
                              },
                            },
                            required: [
                              "precision",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "percent",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              precision: {
                                type: "number",
                                description: "Indicates the number of digits shown to the right of the decimal point for this field. (0-7 inclusive)",
                              },
                              symbol: {
                                type: "string",
                                description: "Currency symbol to use.",
                              },
                            },
                            required: [
                              "precision",
                              "symbol",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "currency",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              durationFormat: {
                                type: "string",
                                enum: [
                                  "h:mm",
                                  "h:mm:ss",
                                  "h:mm:ss.S",
                                  "h:mm:ss.SS",
                                  "h:mm:ss.SSS",
                                ],
                              },
                            },
                            required: [
                              "durationFormat",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "duration",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "multilineText",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "phoneNumber",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              color: {
                                type: "string",
                                enum: [
                                  "yellowBright",
                                  "orangeBright",
                                  "redBright",
                                  "pinkBright",
                                  "purpleBright",
                                  "blueBright",
                                  "cyanBright",
                                  "tealBright",
                                  "greenBright",
                                  "grayBright",
                                ],
                                description: "The color of selected icons.",
                              },
                              icon: {
                                type: "string",
                                enum: [
                                  "star",
                                  "heart",
                                  "thumbsUp",
                                  "flag",
                                  "dot",
                                ],
                                description: "The icon name used to display the rating.",
                              },
                              max: {
                                type: "number",
                                description: "The maximum value for the rating, from 1 to 10 inclusive.",
                              },
                            },
                            required: [
                              "color",
                              "icon",
                              "max",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "rating",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                        description: "Bases on a free or plus plan are limited to using the 'star' icon and 'yellowBright' color.",
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "richText",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              fieldIdInLinkedTable: {
                                type: "string",
                                description: "The id of the field in the linked table",
                              },
                              isValid: {
                                type: "boolean",
                              },
                              recordLinkFieldId: {
                                type: "string",
                                description: "The linked field id",
                              },
                              referencedFieldIds: {
                                type: "array",
                                items: {
                                  type: "string",
                                },
                                description: "The ids of any fields referenced in the rollup formula",
                              },
                              result: {
                                anyOf: [
                                  {
                                  },
                                  {
                                    type: "null",
                                  },
                                ],
                                description: "The resulting field type and options for the rollup. See other field\ntype configs on this page for the possible values. Can be null if invalid.",
                              },
                            },
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "rollup",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "singleLineText",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "email",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            const: "url",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              choices: {
                                type: "array",
                                items: {
                                  type: "object",
                                  properties: {
                                    color: {
                                      type: "string",
                                      description: "Optional when the select field is configured to not use colors.\n\nAllowed values: \"blueLight2\", \"cyanLight2\", \"tealLight2\", \"greenLight2\", \"yellowLight2\", \"orangeLight2\", \"redLight2\", \"pinkLight2\", \"purpleLight2\", \"grayLight2\", \"blueLight1\", \"cyanLight1\", \"tealLight1\", \"greenLight1\", \"yellowLight1\", \"orangeLight1\", \"redLight1\", \"pinkLight1\", \"purpleLight1\", \"grayLight1\", \"blueBright\", \"cyanBright\", \"tealBright\", \"greenBright\", \"yellowBright\", \"orangeBright\", \"redBright\", \"pinkBright\", \"purpleBright\", \"grayBright\", \"blueDark1\", \"cyanDark1\", \"tealDark1\", \"greenDark1\", \"yellowDark1\", \"orangeDark1\", \"redDark1\", \"pinkDark1\", \"purpleDark1\", \"grayDark1\"",
                                    },
                                    id: {
                                      type: "string",
                                    },
                                    name: {
                                      type: "string",
                                    },
                                  },
                                  required: [
                                    "id",
                                    "name",
                                  ],
                                  additionalProperties: false,
                                },
                              },
                            },
                            required: [
                              "choices",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "externalSyncSource",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              prompt: {
                                type: "array",
                                items: {
                                  anyOf: [
                                    {
                                      type: "string",
                                    },
                                    {
                                      type: "object",
                                      properties: {
                                        field: {
                                          type: "object",
                                          properties: {
                                            fieldId: {
                                              type: "string",
                                            },
                                          },
                                          required: [
                                            "fieldId",
                                          ],
                                          additionalProperties: false,
                                        },
                                      },
                                      required: [
                                        "field",
                                      ],
                                      additionalProperties: false,
                                    },
                                  ],
                                },
                                description: "The prompt that is used to generate the results in the AI field, additional object\ntypes may be added in the future. Currently, this is an array of strings or objects that identify any fields interpolated into the prompt.\n\nThe prompt will not currently be provided if this field config is within another\nfields configuration (like a lookup field)",
                              },
                              referencedFieldIds: {
                                type: "array",
                                items: {
                                  type: "string",
                                },
                                description: "The other fields in the record that are used in the ai field\n\nThe referencedFieldIds will not currently be provided if this field config is within another\nfields configuration (like a lookup field)",
                              },
                            },
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "aiText",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              linkedTableId: {
                                type: "string",
                                description: "The ID of the table this field links to",
                              },
                              viewIdForRecordSelection: {
                                type: "string",
                                description: "The ID of the view in the linked table\nto use when showing a list of records to select from",
                              },
                            },
                            required: [
                              "linkedTableId",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "multipleRecordLinks",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                        description: "Creating \"multipleRecordLinks\" fields is supported but updating options for\nexisting \"multipleRecordLinks\" fields is not supported.",
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              choices: {
                                type: "array",
                                items: {
                                  type: "object",
                                  properties: {
                                    color: {
                                      type: "string",
                                      description: "Optional when creating an option.",
                                    },
                                    id: {
                                      type: "string",
                                      description: "This is not specified when creating new options, useful when specifing existing\noptions (for example: reordering options, keeping old options and adding new ones, etc)",
                                    },
                                    name: {
                                      type: "string",
                                    },
                                  },
                                  required: [
                                    "name",
                                  ],
                                  additionalProperties: false,
                                },
                              },
                            },
                            required: [
                              "choices",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "singleSelect",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              choices: {
                                type: "array",
                                items: {
                                  type: "object",
                                  properties: {
                                    color: {
                                      type: "string",
                                      description: "Optional when creating an option.",
                                    },
                                    id: {
                                      type: "string",
                                      description: "This is not specified when creating new options, useful when specifing existing\noptions (for example: reordering options, keeping old options and adding new ones, etc)",
                                    },
                                    name: {
                                      type: "string",
                                    },
                                  },
                                  required: [
                                    "name",
                                  ],
                                  additionalProperties: false,
                                },
                              },
                            },
                            required: [
                              "choices",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "multipleSelects",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            additionalProperties: {
                            },
                          },
                          type: {
                            type: "string",
                            const: "singleCollaborator",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            additionalProperties: {
                            },
                          },
                          type: {
                            type: "string",
                            const: "multipleCollaborators",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              dateFormat: {
                                type: "object",
                                properties: {
                                  format: {
                                    type: "string",
                                    enum: [
                                      "l",
                                      "LL",
                                      "M/D/YYYY",
                                      "D/M/YYYY",
                                      "YYYY-MM-DD",
                                    ],
                                    description: "Format is optional when writing, but it must match\nthe corresponding name if provided.\n\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                  },
                                  name: {
                                    type: "string",
                                    enum: [
                                      "local",
                                      "friendly",
                                      "us",
                                      "european",
                                      "iso",
                                    ],
                                  },
                                },
                                required: [
                                  "name",
                                ],
                                additionalProperties: false,
                              },
                            },
                            required: [
                              "dateFormat",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "date",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              dateFormat: {
                                type: "object",
                                properties: {
                                  format: {
                                    type: "string",
                                    enum: [
                                      "l",
                                      "LL",
                                      "M/D/YYYY",
                                      "D/M/YYYY",
                                      "YYYY-MM-DD",
                                    ],
                                    description: "Format is optional when writing, but it must match\nthe corresponding name if provided.\n\n(`l` for local, `LL` for friendly, `M/D/YYYY` for us, `D/M/YYYY` for european, `YYYY-MM-DD` for iso)",
                                  },
                                  name: {
                                    type: "string",
                                    enum: [
                                      "local",
                                      "friendly",
                                      "us",
                                      "european",
                                      "iso",
                                    ],
                                  },
                                },
                                required: [
                                  "name",
                                ],
                                additionalProperties: false,
                              },
                              timeFormat: {
                                type: "object",
                                properties: {
                                  format: {
                                    type: "string",
                                    enum: [
                                      "h:mma",
                                      "HH:mm",
                                    ],
                                  },
                                  name: {
                                    type: "string",
                                    enum: [
                                      "12hour",
                                      "24hour",
                                    ],
                                  },
                                },
                                required: [
                                  "name",
                                ],
                                additionalProperties: false,
                              },
                              timeZone: {
                              },
                            },
                            required: [
                              "dateFormat",
                              "timeFormat",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "dateTime",
                          },
                        },
                        required: [
                          "options",
                          "type",
                        ],
                        additionalProperties: false,
                      },
                      {
                        type: "object",
                        properties: {
                          options: {
                            type: "object",
                            properties: {
                              isReversed: {
                                type: "boolean",
                              },
                            },
                            required: [
                              "isReversed",
                            ],
                            additionalProperties: false,
                          },
                          type: {
                            type: "string",
                            const: "multipleAttachments",
                          },
                        },
                        required: [
                          "type",
                        ],
                        additionalProperties: false,
                      },
                    ],
                  },
                ],
                description: "The config of a field. NB: Formula fields cannot be created with this MCP due to a limitation in the Airtable API.",
              },
            },
            required: [
              "field",
            ],
            additionalProperties: false,
          },
        },
        required: [
          "baseId",
          "tableId",
          "nested",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
    {
      name: "update_field",
      description: "Update a field's name or description",
      inputSchema: {
        type: "object",
        properties: {
          baseId: {
            type: "string",
          },
          tableId: {
            type: "string",
          },
          fieldId: {
            type: "string",
          },
          name: {
            type: "string",
          },
          description: {
            type: "string",
          },
        },
        required: [
          "baseId",
          "tableId",
          "fieldId",
        ],
        additionalProperties: false,
        $schema: "http://json-schema.org/draft-07/schema#",
      },
    },
  ]