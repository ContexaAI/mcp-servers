[
  {
    "key": "OAUTH_CLIENT_ID",
    "value": null,
    "required": false,
    "label": "OAUTH_CLIENT_ID"
  },
  {
    "key": "OAUTH_CLIENT_SECRET",
    "value": null,
    "required": false,
    "label": "OAUTH_CLIENT_SECRET"
  },
  {
    "key": "DT_PLATFORM_TOKEN",
    "value": "sample-platform-token",
    "required": false,
    "label": "DT_PLATFORM_TOKEN"
  },
  {
    "key": "DT_ENVIRONMENT",
    "value": "https://sample-environment.apps.dynatrace.com",
    "required": true,
    "label": "DT_ENVIRONMENT"
  },
  {
    "key": "SLACK_CONNECTION_ID",
    "value": "fake-slack-connection-id",
    "required": false,
    "label": "SLACK_CONNECTION_ID"
  }
]
[
    {
      "name": "ask-gemini",
      "description": "model selection [-m], sandbox [-s], and changeMode:boolean for providing edits",
      "inputSchema": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "minLength": 1,
            "description": "Analysis request. Use @ syntax to include files (e.g., '@largefile.js explain what this does') or ask general questions"
          },
          "model": {
            "type": "string",
            "description": "Optional model to use (e.g., 'gemini-2.5-flash'). If not specified, uses the default model (gemini-2.5-pro)."
          },
          "sandbox": {
            "type": "boolean",
            "default": false,
            "description": "Use sandbox mode (-s flag) to safely test code changes, execute scripts, or run potentially risky operations in an isolated environment"
          },
          "changeMode": {
            "type": "boolean",
            "default": false,
            "description": "Enable structured change mode - formats prompts to prevent tool errors and returns structured edit suggestions that Claude can apply directly"
          },
          "chunkIndex": {
            "type": [
              "number",
              "string"
            ],
            "description": "Which chunk to return (1-based)"
          },
          "chunkCacheKey": {
            "type": "string",
            "description": "Optional cache key for continuation"
          }
        },
        "required": [
          "prompt"
        ]
      }
    },
    {
      "name": "ping",
      "description": "Echo",
      "inputSchema": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "default": "",
            "description": "Message to echo "
          }
        },
        "required": []
      }
    },
    {
      "name": "Help",
      "description": "receive help information",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "brainstorm",
      "description": "Generate novel ideas with dynamic context gathering. --> Creative frameworks (SCAMPER, Design Thinking, etc.), domain context integration, idea clustering, feasibility analysis, and iterative refinement.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "minLength": 1,
            "description": "Primary brainstorming challenge or question to explore"
          },
          "model": {
            "type": "string",
            "description": "Optional model to use (e.g., 'gemini-2.5-flash'). If not specified, uses the default model (gemini-2.5-pro)."
          },
          "methodology": {
            "type": "string",
            "enum": [
              "divergent",
              "convergent",
              "scamper",
              "design-thinking",
              "lateral",
              "auto"
            ],
            "default": "auto",
            "description": "Brainstorming framework: 'divergent' (generate many ideas), 'convergent' (refine existing), 'scamper' (systematic triggers), 'design-thinking' (human-centered), 'lateral' (unexpected connections), 'auto' (AI selects best)"
          },
          "domain": {
            "type": "string",
            "description": "Domain context for specialized brainstorming (e.g., 'software', 'business', 'creative', 'research', 'product', 'marketing')"
          },
          "constraints": {
            "type": "string",
            "description": "Known limitations, requirements, or boundaries (budget, time, technical, legal, etc.)"
          },
          "existingContext": {
            "type": "string",
            "description": "Background information, previous attempts, or current state to build upon"
          },
          "ideaCount": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "default": 12,
            "description": "Target number of ideas to generate (default: 10-15)"
          },
          "includeAnalysis": {
            "type": "boolean",
            "default": true,
            "description": "Include feasibility, impact, and implementation analysis for generated ideas"
          }
        },
        "required": [
          "prompt"
        ]
      }
    },
    {
      "name": "fetch-chunk",
      "description": "Retrieves cached chunks from a changeMode response. Use this to get subsequent chunks after receiving a partial changeMode response.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "cacheKey": {
            "type": "string",
            "description": "The cache key provided in the initial changeMode response"
          },
          "chunkIndex": {
            "type": "number",
            "minimum": 1,
            "description": "Which chunk to retrieve (1-based index)"
          }
        },
        "required": [
          "cacheKey",
          "chunkIndex"
        ]
      }
    },
    {
      "name": "timeout-test",
      "description": "Test timeout prevention by running for a specified duration",
      "inputSchema": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "minimum": 10,
            "description": "Duration in milliseconds (minimum 10ms)"
          }
        },
        "required": [
          "duration"
        ]
      }
    }
  ]
  